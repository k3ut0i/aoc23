* DONE Day 01
** DONE Part1
- [X] f: iterate over characters in a string and get the number. Did this with regex capture.
- [X] fold f [strings] 0. Did this with array.reduce

** DONE Part2
I'm stuck here. I used string.replace to convert all instances of words to numerals, but I am getting the wrong answer. I think the problem is with numbers that share spellings _eightwo_ will be _8wo_ and be calibrated to 88. But it might actually be _82_ and has calibrated value of 82.

Solved this in raku with ~:exhaustive~ matching. After getting all the matches I just replaced the starting character of the match with the digit.

* DONE Day 02 - Cube Conundrum
Use raku grammars for parsing.
The return value from grammar is somekind of match/map. I should be able to convert it internally to a better data structure.

* DONE Day 03 - Gear Ratios
Regex format seems a bit different.
- Negating character classes had <-[]>
- range [0-9] is dropped infavor of [0..9]
- named captures ~/$<name>=(\d+)/~ to capture a number
- my regex R, named regexes for future use

List utilities
- unique, :with function
- grep, to filter elements
- push @a.Slip, to push multiple elements at a time.
  
Mostly a parsing and data management problem.

* DONE Day 04 - Scratchcards
- Good use of grammars and actions to get better data structures after parsing.
- got used to raku hashes
A recursive enumeration.

* TODO Day 05 - If you give a seed a fertilizer
** DONE Part1 
I encoded the whole almanac file in a ~grammar~ \o/. The actual logic to trace through the data is simple when my data is in desired format.
** TODO Part2
Since there are a whole lot of seeds, tracing each one individually will be quite inefficient. The maps are piecewise linear, so each range will map to a set of new ranges. While each step will increase the number of ranges in play, their number seems to be a lot less than individual seeds.

+Just thought of something. Since all maps are linear with positive slopes (= 1), the smallest destination must be with smallest source. So even after many maps, the smallest seed should give the smallest location.+ This was wrong, as the maps are piece wise linear, but the breaks can introduce negative slopes.

1. [X] First I need to _complete_ the maps. Introduce the empty spaces as identity maps.
2. [X] mapping should act on intervals, rather than single points.
3. [ ] propagate this mapping a sequence of intervals.
